;;;;;;;;;;;;;;;;
;Adress Defines;
;;;;;;;;;;;;;;;;


; These have to be 24-Bit addresses!
!varram	?= $702000	; 953 bytes
!backupram	?= $730000	; 16 kb to backup L3 graphics and tilemap
!tileram	?= $734000	; ~3 kb for VWF graphics and tilemap

!varramSA1	?= $415000	; 953 bytes
!backupramSA1	?= $410000	; 16 kb to backup L3 graphics and tilemap
!tileramSA1	?= $414000	; ~3 kb for VWF graphics and tilemap
!palettebackupramSA1 ?= $400703	; 64 kb to backup parts of the palette that get overwritten


;;;;;;;;;;;;;;;;
;Patch Settings;
;;;;;;;;;;;;;;;;


; Whether to use 8-bit (BitMode.8Bit) or 16-bit mode (BitMode.16Bit).
!bitmode ?= BitMode.8Bit

; Whether to hijack SMW's original message box.
!hijackbox ?= true

; Which palette number to use for the text box frame.
; (Assumes 2-BPP/4-color palettes)
!framepalette ?= $03

; Whether to automatically apply SRAM expansion.
; By default, only applies to non SA-1 ROMs and is required if you leave address defines on top unchanged.
!patch_sram_expansion ?= not(!use_sa1_mapping)

; Whether to use SA-1 DMA to transfer graphics when using an SA-1 ROM.
; NOTE: Should stay disabled for the time being. Breaks completely in BSNES/Higan v115, presumeably due to an emulator bug.
!sa1_use_dma_for_gfx_transfer ?= false

; The number of text macros reserved for buffered text.
; Note that these require free RAM, so don't claim a lot more than you actually need.
; Feel free to set to 0 if you don't plan on using buffered text macros.
!num_reserved_text_macros ?= $0005

; The size of the text buffer for buffered text macros. Should be sufficiently large to hold all your buffered text macros.
; Feel free to set to 0 if you don't plan on using buffered text macros.
!buffered_text_macro_buffer_size = 512

; Set this to true to enable short aliases. For example, once enabled, you can use !text instead of %vwf_text(),
; !press_a instead of %vwf_wait_for_a(), font() instead of vwf_font() etc. See the documentation for all available aliases.
!enable_short_aliases = true


;;;;;;;;;;;;;;;;;;
;Default Settings;
;;;;;;;;;;;;;;;;;;


; These values define the default properties of the text box design. They are used
; when not modified in-game. Note that this patch currently doesn't include a built-in
; method to customize your text box design in-game, so custom coded is needed if you
; want to make use of that.
!default_text_box_bg_pattern ?= $08
!default_text_box_bg_color ?= vwf_make_color_15(4, 6, 17)
!default_text_box_frame ?= $07


; Default values for message headers.
; See manual for meanings and min/max values.
!default_font ?= 0

!default_x_pos ?= 1
!default_y_pos ?= 1
!default_width ?= 14
!default_height ?= 3

!default_box_animation ?= BoxAnimation.SoM
!default_text_palette ?= $07
!default_text_color ?= vwf_make_color_15(31, 31, 31)
!default_outline_color ?= vwf_make_color_15(0, 0, 0)

!default_space_width ?= 7
!default_text_margin ?= 4
!default_text_alignment ?= TextAlignment.Left

!default_freeze_game ?= true
!default_text_speed ?= 0
!default_auto_wait ?= AutoWait.WaitForA
!default_button_speedup ?= true
!default_enable_skipping ?= true

!default_enable_sfx ?= true
!default_letter_sound_id ?= $13
!default_letter_sound_bank ?= $1DF9
!default_wait_sound_id ?= $13
!default_wait_sound_bank ?= $1DF9
!default_cursor_sound_id ?= $23
!default_cursor_sound_bank ?= $1DFC
!default_continue_sound_id ?= $29
!default_continue_sound_bank ?= $1DFC

!default_enable_message_asm ?= false


; Default settings for the "display options" command.
; These can be overridden for every use of the option command, but the macro currently
; doesn't expose this functionality, because I don't think it's widely used. If you do
; ever need to use it, just re-define these defaults before and after a call to the
; options macro.
!default_cursor_space ?= 4
!default_cursor_char ?= $00A8


;;;;;;;;;;;;;;;
;Data Includes;
;;;;;;;;;;;;;;;


macro define_data()
	%vwf_add_font("data/fonts/soe/vwffont.bin", "data/fonts/soe/vwffont.asm")

	%vwf_add_messages("data/vwfmessages.asm", !vwf_default_table_file)
endmacro


; This macro defines the properties and colors of each text box frame you want to support in-game.
;
; Format:
;db %--------,%--------		; Frame header (currently all zeros, reserved for future expansion)
;dw $COL1, $COL2, $COL3		; Frame palette
;
macro define_frames()
	; Frame $00
	db %00000000,%00000000
	dw vwf_make_color_15(00, 00, 00), vwf_make_color_15(31, 31, 31), vwf_make_color_15(00, 00, 00)
	
	; Frame $01
	db %00000000,%00000000
	dw vwf_make_color_15(22, 18, 02), vwf_make_color_15(13, 07, 01), vwf_make_color_15(04, 02, 00)
	
	; Frame $02
	db %00000000,%00000000
	dw vwf_make_color_15(13, 15, 17), vwf_make_color_15(06, 07, 09), vwf_make_color_15(01, 02, 03)
	
	; Frame $03
	db %00000000,%00000000
	dw vwf_make_color_15(29, 27, 17), vwf_make_color_15(21, 18, 11), vwf_make_color_15(13, 10, 08)
	
	; Frame $04
	db %00000000,%00000000
	dw vwf_make_color_15(04, 06, 00), vwf_make_color_15(31, 27, 07), vwf_make_color_15(17, 14, 05)
	
	; Frame $05
	db %00000000,%00000000
	dw vwf_make_color_15(28, 28, 28), vwf_make_color_15(16, 18, 20), vwf_make_color_15(00, 00, 00)
	
	; Frame $06
	db %00000000,%00000000
	dw vwf_make_color_15(31, 25, 17), vwf_make_color_15(28, 22, 15), vwf_make_color_15(24, 18, 12)
	
	; Frame $07
	db %00000000,%00000000
	dw vwf_make_color_15(21, 17, 20), vwf_make_color_15(10, 08, 10), vwf_make_color_15(31, 28, 25)
	
	; Frame $08
	db %00000000,%00000000
	dw vwf_make_color_15(16, 18, 12), vwf_make_color_15(09, 08, 11), vwf_make_color_15(03, 03, 03)
	
	; Frame $09
	db %00000000,%00000000
	dw vwf_make_color_15(16, 18, 12), vwf_make_color_15(09, 08, 11), vwf_make_color_15(03, 03, 03)
	
	; Frame $0A
	db %00000000,%00000000
	dw vwf_make_color_15(16, 18, 12), vwf_make_color_15(09, 08, 11), vwf_make_color_15(03, 03, 03)
	
	; Frame $0B
	db %00000000,%00000000
	dw vwf_make_color_15(13, 15, 17), vwf_make_color_15(06, 07, 09), vwf_make_color_15(01, 02, 03)
	
	; Frame $0C
	db %00000000,%00000000
	dw vwf_make_color_15(22, 18, 02), vwf_make_color_15(13, 07, 01), vwf_make_color_15(04, 02, 00)
	
	; Frame $0D
	db %00000000,%00000000
	dw vwf_make_color_15(16, 15, 06), vwf_make_color_15(11, 06, 00), vwf_make_color_15(04, 02, 00)
	
	; Frame $0E
	db %00000000,%00000000
	dw vwf_make_color_15(16, 18, 12), vwf_make_color_15(09, 08, 11), vwf_make_color_15(03, 03, 03)
	
	; Frame $0F
	db %00000000,%00000000
	dw vwf_make_color_15(16, 18, 12), vwf_make_color_15(09, 08, 11), vwf_make_color_15(03, 03, 03)
endmacro
